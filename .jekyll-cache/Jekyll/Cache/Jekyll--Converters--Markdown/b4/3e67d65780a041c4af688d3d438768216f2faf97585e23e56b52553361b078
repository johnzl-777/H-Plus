I"†,<p>FORTRAN</p>

<div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">PROGRAM</span><span class="w"> </span><span class="n">fdate</span><span class="w">
</span><span class="c1">!</span><span class="w">
</span><span class="c1">! "@(#) fdate(1) writes timestamp using specified syntax"</span><span class="w">
</span><span class="c1">!</span><span class="w">
   </span><span class="k">USE</span><span class="w"> </span><span class="n">m_kracken</span><span class="w">                     </span><span class="c1">! command line parameter cracking module</span><span class="w">
   </span><span class="k">IMPLICIT</span><span class="w"> </span><span class="k">NONE</span><span class="w">

   </span><span class="kt">INTEGER</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="k">PARAMETER</span><span class="w">  </span><span class="p">::</span><span class="w"> </span><span class="n">clen</span><span class="o">=</span><span class="mi">255</span><span class="w">  </span><span class="c1">! length of format</span><span class="w">
   </span><span class="kt">CHARACTER</span><span class="p">(</span><span class="nb">len</span><span class="o">=</span><span class="n">clen</span><span class="p">)</span><span class="w">  </span><span class="p">::</span><span class="w"> </span><span class="k">format</span><span class="w">    </span><span class="c1">! input format string</span><span class="w">

   </span><span class="kt">INTEGER</span><span class="w">              </span><span class="p">::</span><span class="w"> </span><span class="n">ilen</span><span class="w">
   </span><span class="kt">INTEGER</span><span class="w">              </span><span class="p">::</span><span class="w"> </span><span class="n">ier</span><span class="w">
   </span><span class="kt">INTEGER</span><span class="w">              </span><span class="p">::</span><span class="w"> </span><span class="n">i10</span><span class="w">

   </span><span class="kt">CHARACTER</span><span class="p">(</span><span class="nb">LEN</span><span class="o">=</span><span class="mi">8</span><span class="p">)</span><span class="w">     </span><span class="p">::</span><span class="w"> </span><span class="n">date</span><span class="w">      </span><span class="c1">! returned values from DATE_AND_TIME()</span><span class="w">
   </span><span class="kt">CHARACTER</span><span class="p">(</span><span class="nb">LEN</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span><span class="w">    </span><span class="p">::</span><span class="w"> </span><span class="n">time</span><span class="w">
   </span><span class="kt">CHARACTER</span><span class="p">(</span><span class="nb">LEN</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span><span class="w">     </span><span class="p">::</span><span class="w"> </span><span class="n">zone</span><span class="w">
   </span><span class="kt">INTEGER</span><span class="p">,</span><span class="k">DIMENSION</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="w"> </span><span class="p">::</span><span class="w"> </span><span class="n">values</span><span class="w">    

   </span><span class="kt">LOGICAL</span><span class="w">              </span><span class="p">::</span><span class="w"> </span><span class="n">keyword</span><span class="w">   </span><span class="c1">! flag that previous character was a % character</span><span class="w">
   </span><span class="kt">CHARACTER</span><span class="p">(</span><span class="nb">LEN</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="w">     </span><span class="p">::</span><span class="w"> </span><span class="nb">char</span><span class="w">      </span><span class="c1">! character being looked at in format string</span><span class="w">
</span></code></pre></div></div>

<p>Python</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Import the modules
</span><span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">random</span>

<span class="n">ans</span> <span class="o">=</span> <span class="bp">True</span>

<span class="k">while</span> <span class="n">ans</span><span class="p">:</span>
    <span class="n">question</span> <span class="o">=</span> <span class="nb">raw_input</span><span class="p">(</span><span class="s">"Ask the magic 8 ball a question: (press enter to quit) "</span><span class="p">)</span>
    
    <span class="n">answers</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">8</span><span class="p">)</span>
    
    <span class="k">if</span> <span class="n">question</span> <span class="o">==</span> <span class="s">""</span><span class="p">:</span>
        <span class="n">sys</span><span class="o">.</span><span class="nb">exit</span><span class="p">()</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"It is certain"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"Outlook good"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"You may rely on it"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"Ask again later"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"Concentrate and ask again"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">6</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"Reply hazy, try again"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">7</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"My reply is no"</span>
    
    <span class="k">elif</span> <span class="n">answers</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span>
        <span class="k">print</span> <span class="s">"My sources say no"</span>
</code></pre></div></div>

<p>C</p>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*   
   A palindrome is a word, phrase, number, or other sequence of symbols or elements, 
  whose meaning may be interpreted the same way in either forward or reverse direction.
  This program will prompt the user to enter a word or a sentence and then confirms if 
  the user's entry is an palindrome or not.   
*/</span>
<span class="cp">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;
</span> 
<span class="n">bool</span> <span class="nf">isPalindrome</span><span class="p">(</span> <span class="kt">char</span> <span class="p">[]</span> <span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span> <span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">userString</span><span class="p">[</span><span class="mi">300</span><span class="p">];</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="err">\</span><span class="s">"Type a word or phrase to see if it's a Palindrome.</span><span class="se">\"</span><span class="s"> &lt;&lt; </span><span class="se">\"\n\n\"</span><span class="s">;</span><span class="err">
</span><span class="s">    std::cin.getline(userString, 300);      </span><span class="err">
</span><span class="s">    std::cout &lt;&lt; </span><span class="se">\"\n\"</span><span class="s">;</span><span class="err">
</span><span class="s">    if ( isPalindrome( userString ) )</span><span class="err">
</span><span class="s">            std::cout &lt;&lt; </span><span class="se">\"\\</span><span class="s">"</span><span class="err">\</span><span class="s">" &lt;&lt; userString &lt;&lt; </span><span class="se">\"\\</span><span class="s">"</span> <span class="n">is</span> <span class="n">a</span> <span class="n">Palindrome</span><span class="p">.</span><span class="err">\</span><span class="s">";</span><span class="err">
</span><span class="s">    else</span><span class="err">
</span><span class="s">            std::cout &lt;&lt; </span><span class="se">\"\\</span><span class="s">"</span><span class="err">\</span><span class="s">" &lt;&lt; userString &lt;&lt; </span><span class="se">\"\\</span><span class="s">"</span> <span class="n">is</span> <span class="n">not</span> <span class="n">a</span> <span class="n">Palindrome</span><span class="p">.</span><span class="err">\</span><span class="s">";   </span><span class="err">
</span><span class="s">    std::cout &lt;&lt; </span><span class="se">\"\n\n\"</span><span class="s">;</span><span class="err">
</span><span class="s">    system( </span><span class="se">\"</span><span class="s">PAUSE</span><span class="se">\"</span><span class="s"> );        </span><span class="err">
</span><span class="s">    return 0;</span><span class="err">
</span><span class="s">}</span><span class="err">
</span></code></pre></div></div>

<p>C++</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Good name</span>
  <span class="kt">int</span> <span class="n">minutesPerHour</span> <span class="o">=</span> <span class="mi">60</span><span class="p">;</span>
  
  <span class="c1">// OK, but not so easy to understand what m actually is</span>
  <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="mi">60</span><span class="p">;</span>
  
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">minutesPerHour</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">m</span><span class="p">;</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>
:ET