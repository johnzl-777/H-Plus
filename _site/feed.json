{
    "version": "https://jsonfeed.org/version/1",
    "title": "Site Title",
    "home_page_url": "http://0.0.0.0:4000/",
    "feed_url": "http://0.0.0.0:4000/feed.json",
    "description": null,
    "icon": "http://0.0.0.0:4000/apple-touch-icon.png",
    "favicon": "http://0.0.0.0:4000/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "First Last",
        "url": "site-url",
        "avatar": null
    },
    
"items": [
    
        {
            "id": "http://0.0.0.0:4000/2020/04/04/hello-world",
            "title": "Hello World!",
            "summary": "My First Post",
            "content_text": "Here’s a “fun” integral (just to test if MathJax is working properly)Along with a little bit of inline MathJax: , , , Now lets go for syntax highlighting, first with Ruby:def foo  puts 'foo'endNow we shoot for Python:for i in range(10):    print(i)And let’s do C for safe callvoid XorSwap( int* x, int* y ) {  if (x != y)  {    *x ^= *y;    *y ^= *x;    *x ^= *y;  }}Time for some pictures as well!",
            "content_html": "<p>Here’s a “fun” integral (just to test if MathJax is working properly)</p><script type=\"math/tex; mode=display\">\\int^{\\infty}_{-\\infty} \\frac{dx}{(e^{x} - x)^2 + \\pi^2} = \\frac{1}{1+\\Omega}</script><p>Along with a little bit of inline MathJax: <script type=\"math/tex\">x</script>, <script type=\"math/tex\">y</script>, <script type=\"math/tex\">z</script>, <script type=\"math/tex\">\\rho</script></p><p>Now lets go for syntax highlighting, first with Ruby:</p><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">foo</span>  <span class=\"nb\">puts</span> <span class=\"s1\">'foo'</span><span class=\"k\">end</span></code></pre></div></div><p>Now we shoot for Python:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span></code></pre></div></div><p>And let’s do C for safe call</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">XorSwap</span><span class=\"p\">(</span> <span class=\"kt\">int</span><span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\">*</span> <span class=\"n\">y</span> <span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">!=</span> <span class=\"n\">y</span><span class=\"p\">)</span>  <span class=\"p\">{</span>    <span class=\"o\">*</span><span class=\"n\">x</span> <span class=\"o\">^=</span> <span class=\"o\">*</span><span class=\"n\">y</span><span class=\"p\">;</span>    <span class=\"o\">*</span><span class=\"n\">y</span> <span class=\"o\">^=</span> <span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">;</span>    <span class=\"o\">*</span><span class=\"n\">x</span> <span class=\"o\">^=</span> <span class=\"o\">*</span><span class=\"n\">y</span><span class=\"p\">;</span>  <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>Time for some pictures as well!</p><p><img src=\"/images/sleeping_cat.jpg\" alt=\"A sleeping cat\" /></p>",
            "url": "http://0.0.0.0:4000/2020/04/04/hello-world",
            
            
            
            "tags": ["hello","math"],
            
            "date_published": "2020-04-04T00:00:00-05:00",
            "date_modified": "2020-04-04T00:00:00-05:00",
            
                "author":  {
                "name": "First Last",
                "url": "site-url",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://0.0.0.0:4000/2020/03/11/a-post",
            "title": "Dio Brando",
            "summary": "Some stuff Neil deGrasse Tyson Said",
            "content_text": "I’ve known from long ago that the universe was calling me. If you were one of those annoying adults that said, ‘Oh, what are you gonna be when you grow up?’ I would say, ‘Astrophysicist.’ And then they’d walk away real quickly.There is no example of someone reading their scripture and saying, ‘I have a prediction about the world that no one knows yet, because this gave me insight. Let’s go test that prediction,’ and have the prediction be correct.I can’t tell you how many people say they were turned off from science because of a science teacher that completely sucked out all the inspiration and enthusiasm they had for the course.I don’t know anybody who said, ‘I love that teacher, he or she gave a really good homework set,’ or ‘Boy, that was the best class I ever took because those exams were awesome.’ That’s not what people want to talk about. It’s not what influences people in one profession or another.Once you have an innovation culture, even those who are not scientists or engineers - poets, actors, journalists - they, as communities, embrace the meaning of what it is to be scientifically literate. They embrace the concept of an innovation culture. They vote in ways that promote it. They don’t fight science and they don’t fight technology.I see all this talk about jobs going overseas as a symptom of the absence of innovation. And the absence of innovation is a symptom of there being no major national priority to advance a frontier.",
            "content_html": "<p>I’ve known from long ago that the universe was calling me. If you were one of those annoying adults that said, ‘Oh, what are you gonna be when you grow up?’ I would say, ‘Astrophysicist.’ And then they’d walk away real quickly.</p><p>There is no example of someone reading their scripture and saying, ‘I have a prediction about the world that no one knows yet, because this gave me insight. Let’s go test that prediction,’ and have the prediction be correct.</p><p>I can’t tell you how many people say they were turned off from science because of a science teacher that completely sucked out all the inspiration and enthusiasm they had for the course.</p><p>I don’t know anybody who said, ‘I love that teacher, he or she gave a really good homework set,’ or ‘Boy, that was the best class I ever took because those exams were awesome.’ That’s not what people want to talk about. It’s not what influences people in one profession or another.</p><p>Once you have an innovation culture, even those who are not scientists or engineers - poets, actors, journalists - they, as communities, embrace the meaning of what it is to be scientifically literate. They embrace the concept of an innovation culture. They vote in ways that promote it. They don’t fight science and they don’t fight technology.</p><p>I see all this talk about jobs going overseas as a symptom of the absence of innovation. And the absence of innovation is a symptom of there being no major national priority to advance a frontier.</p>",
            "url": "http://0.0.0.0:4000/2020/03/11/a-post",
            
            
            
            "tags": ["tag1","another-tag","tag3"],
            
            "date_published": "2020-03-11T00:00:00-05:00",
            "date_modified": "2020-03-11T00:00:00-05:00",
            
                "author":  {
                "name": "First Last",
                "url": "site-url",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://0.0.0.0:4000/2020/02/19/code-examples",
            "title": "Code Examples",
            "summary": "Example of code highlighting",
            "content_text": "FORTRANPROGRAM fdate!! \"@(#) fdate(1) writes timestamp using specified syntax\"!   USE m_kracken                     ! command line parameter cracking module   IMPLICIT NONE   INTEGER , PARAMETER  :: clen=255  ! length of format   CHARACTER(len=clen)  :: format    ! input format string   INTEGER              :: ilen   INTEGER              :: ier   INTEGER              :: i10   CHARACTER(LEN=8)     :: date      ! returned values from DATE_AND_TIME()   CHARACTER(LEN=10)    :: time   CHARACTER(LEN=5)     :: zone   INTEGER,DIMENSION(8) :: values       LOGICAL              :: keyword   ! flag that previous character was a % character   CHARACTER(LEN=1)     :: char      ! character being looked at in format stringPython# Import the modulesimport sysimport randomans = Truewhile ans:    question = raw_input(\"Ask the magic 8 ball a question: (press enter to quit) \")        answers = random.randint(1,8)        if question == \"\":        sys.exit()        elif answers == 1:        print \"It is certain\"        elif answers == 2:        print \"Outlook good\"        elif answers == 3:        print \"You may rely on it\"        elif answers == 4:        print \"Ask again later\"        elif answers == 5:        print \"Concentrate and ask again\"        elif answers == 6:        print \"Reply hazy, try again\"        elif answers == 7:        print \"My reply is no\"        elif answers == 8:        print \"My sources say no\"C/*      A palindrome is a word, phrase, number, or other sequence of symbols or elements,   whose meaning may be interpreted the same way in either forward or reverse direction.  This program will prompt the user to enter a word or a sentence and then confirms if   the user's entry is an palindrome or not.   */#include &lt;iostream&gt;#include &lt;cstdlib&gt; bool isPalindrome( char [] ); int main( int argc, char *argv[] ){    char userString[300];    std::cout &lt;&lt; \\\"Type a word or phrase to see if it's a Palindrome.\\\" &lt;&lt; \\\"\\n\\n\\\";    std::cin.getline(userString, 300);          std::cout &lt;&lt; \\\"\\n\\\";    if ( isPalindrome( userString ) )            std::cout &lt;&lt; \\\"\\\\\"\\\" &lt;&lt; userString &lt;&lt; \\\"\\\\\" is a Palindrome.\\\";    else            std::cout &lt;&lt; \\\"\\\\\"\\\" &lt;&lt; userString &lt;&lt; \\\"\\\\\" is not a Palindrome.\\\";       std::cout &lt;&lt; \\\"\\n\\n\\\";    system( \\\"PAUSE\\\" );            return 0;}C++#include &lt;iostream&gt;using namespace std;int main() {  // Good name  int minutesPerHour = 60;    // OK, but not so easy to understand what m actually is  int m = 60;    cout &lt;&lt; minutesPerHour &lt;&lt; \"\\n\";  cout &lt;&lt; m;  return 0;}",
            "content_html": "<p>FORTRAN</p><div class=\"language-fortran highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">PROGRAM</span><span class=\"w\"> </span><span class=\"n\">fdate</span><span class=\"w\"></span><span class=\"c1\">!</span><span class=\"w\"></span><span class=\"c1\">! \"@(#) fdate(1) writes timestamp using specified syntax\"</span><span class=\"w\"></span><span class=\"c1\">!</span><span class=\"w\">   </span><span class=\"k\">USE</span><span class=\"w\"> </span><span class=\"n\">m_kracken</span><span class=\"w\">                     </span><span class=\"c1\">! command line parameter cracking module</span><span class=\"w\">   </span><span class=\"k\">IMPLICIT</span><span class=\"w\"> </span><span class=\"k\">NONE</span><span class=\"w\">   </span><span class=\"kt\">INTEGER</span><span class=\"w\"> </span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">PARAMETER</span><span class=\"w\">  </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">clen</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"w\">  </span><span class=\"c1\">! length of format</span><span class=\"w\">   </span><span class=\"kt\">CHARACTER</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"o\">=</span><span class=\"n\">clen</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"k\">format</span><span class=\"w\">    </span><span class=\"c1\">! input format string</span><span class=\"w\">   </span><span class=\"kt\">INTEGER</span><span class=\"w\">              </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">ilen</span><span class=\"w\">   </span><span class=\"kt\">INTEGER</span><span class=\"w\">              </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">ier</span><span class=\"w\">   </span><span class=\"kt\">INTEGER</span><span class=\"w\">              </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">i10</span><span class=\"w\">   </span><span class=\"kt\">CHARACTER</span><span class=\"p\">(</span><span class=\"nb\">LEN</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"w\">     </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">date</span><span class=\"w\">      </span><span class=\"c1\">! returned values from DATE_AND_TIME()</span><span class=\"w\">   </span><span class=\"kt\">CHARACTER</span><span class=\"p\">(</span><span class=\"nb\">LEN</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"w\">    </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\">   </span><span class=\"kt\">CHARACTER</span><span class=\"p\">(</span><span class=\"nb\">LEN</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\">     </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">zone</span><span class=\"w\">   </span><span class=\"kt\">INTEGER</span><span class=\"p\">,</span><span class=\"k\">DIMENSION</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"w\">       </span><span class=\"kt\">LOGICAL</span><span class=\"w\">              </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"n\">keyword</span><span class=\"w\">   </span><span class=\"c1\">! flag that previous character was a % character</span><span class=\"w\">   </span><span class=\"kt\">CHARACTER</span><span class=\"p\">(</span><span class=\"nb\">LEN</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\">     </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nb\">char</span><span class=\"w\">      </span><span class=\"c1\">! character being looked at in format string</span><span class=\"w\"></span></code></pre></div></div><p>Python</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Import the modules</span><span class=\"kn\">import</span> <span class=\"nn\">sys</span><span class=\"kn\">import</span> <span class=\"nn\">random</span><span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"bp\">True</span><span class=\"k\">while</span> <span class=\"n\">ans</span><span class=\"p\">:</span>    <span class=\"n\">question</span> <span class=\"o\">=</span> <span class=\"nb\">raw_input</span><span class=\"p\">(</span><span class=\"s\">\"Ask the magic 8 ball a question: (press enter to quit) \"</span><span class=\"p\">)</span>        <span class=\"n\">answers</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">)</span>        <span class=\"k\">if</span> <span class=\"n\">question</span> <span class=\"o\">==</span> <span class=\"s\">\"\"</span><span class=\"p\">:</span>        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"nb\">exit</span><span class=\"p\">()</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"It is certain\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"Outlook good\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"You may rely on it\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"Ask again later\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"Concentrate and ask again\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"Reply hazy, try again\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">7</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"My reply is no\"</span>        <span class=\"k\">elif</span> <span class=\"n\">answers</span> <span class=\"o\">==</span> <span class=\"mi\">8</span><span class=\"p\">:</span>        <span class=\"k\">print</span> <span class=\"s\">\"My sources say no\"</span></code></pre></div></div><p>C</p><div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cm\">/*      A palindrome is a word, phrase, number, or other sequence of symbols or elements,   whose meaning may be interpreted the same way in either forward or reverse direction.  This program will prompt the user to enter a word or a sentence and then confirms if   the user's entry is an palindrome or not.   */</span><span class=\"cp\">#include &lt;iostream&gt;#include &lt;cstdlib&gt;</span> <span class=\"n\">bool</span> <span class=\"nf\">isPalindrome</span><span class=\"p\">(</span> <span class=\"kt\">char</span> <span class=\"p\">[]</span> <span class=\"p\">);</span> <span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span> <span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[]</span> <span class=\"p\">)</span><span class=\"p\">{</span>    <span class=\"kt\">char</span> <span class=\"n\">userString</span><span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">];</span>    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"err\">\\</span><span class=\"s\">\"Type a word or phrase to see if it's a Palindrome.</span><span class=\"se\">\\\"</span><span class=\"s\"> &lt;&lt; </span><span class=\"se\">\\\"\\n\\n\\\"</span><span class=\"s\">;</span><span class=\"err\"></span><span class=\"s\">    std::cin.getline(userString, 300);      </span><span class=\"err\"></span><span class=\"s\">    std::cout &lt;&lt; </span><span class=\"se\">\\\"\\n\\\"</span><span class=\"s\">;</span><span class=\"err\"></span><span class=\"s\">    if ( isPalindrome( userString ) )</span><span class=\"err\"></span><span class=\"s\">            std::cout &lt;&lt; </span><span class=\"se\">\\\"\\\\</span><span class=\"s\">\"</span><span class=\"err\">\\</span><span class=\"s\">\" &lt;&lt; userString &lt;&lt; </span><span class=\"se\">\\\"\\\\</span><span class=\"s\">\"</span> <span class=\"n\">is</span> <span class=\"n\">a</span> <span class=\"n\">Palindrome</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"s\">\";</span><span class=\"err\"></span><span class=\"s\">    else</span><span class=\"err\"></span><span class=\"s\">            std::cout &lt;&lt; </span><span class=\"se\">\\\"\\\\</span><span class=\"s\">\"</span><span class=\"err\">\\</span><span class=\"s\">\" &lt;&lt; userString &lt;&lt; </span><span class=\"se\">\\\"\\\\</span><span class=\"s\">\"</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">Palindrome</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"s\">\";   </span><span class=\"err\"></span><span class=\"s\">    std::cout &lt;&lt; </span><span class=\"se\">\\\"\\n\\n\\\"</span><span class=\"s\">;</span><span class=\"err\"></span><span class=\"s\">    system( </span><span class=\"se\">\\\"</span><span class=\"s\">PAUSE</span><span class=\"se\">\\\"</span><span class=\"s\"> );        </span><span class=\"err\"></span><span class=\"s\">    return 0;</span><span class=\"err\"></span><span class=\"s\">}</span><span class=\"err\"></span></code></pre></div></div><p>C++</p><div class=\"language-c++ highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;iostream&gt;</span><span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>  <span class=\"c1\">// Good name</span>  <span class=\"kt\">int</span> <span class=\"n\">minutesPerHour</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"p\">;</span>    <span class=\"c1\">// OK, but not so easy to understand what m actually is</span>  <span class=\"kt\">int</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"p\">;</span>    <span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">minutesPerHour</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">;</span>  <span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">m</span><span class=\"p\">;</span>  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div>",
            "url": "http://0.0.0.0:4000/2020/02/19/code-examples",
            
            
            
            "tags": ["fortran","c++","c","python"],
            
            "date_published": "2020-02-19T00:00:00-06:00",
            "date_modified": "2020-02-19T00:00:00-06:00",
            
                "author":  {
                "name": "First Last",
                "url": "site-url",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://0.0.0.0:4000/2020/01/05/no-code",
            "title": "No Code",
            "summary": "Example of no code",
            "content_text": "This is a test with no codeThe text here will come out white as it should bebecause there is no syntax highlighting on.  Here’s some quoted text just for display",
            "content_html": "<p>This is a test with no code</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>The text here will come out white as it should bebecause there is no syntax highlighting on.</code></pre></div></div><blockquote>  <p>Here’s some quoted text just for display</p></blockquote>",
            "url": "http://0.0.0.0:4000/2020/01/05/no-code",
            
            
            
            
            
            "date_published": "2020-01-05T00:00:00-06:00",
            "date_modified": "2020-01-05T00:00:00-06:00",
            
                "author":  {
                "name": "First Last",
                "url": "site-url",
                "avatar": null
                }
                
            
        }
    
    ]
}